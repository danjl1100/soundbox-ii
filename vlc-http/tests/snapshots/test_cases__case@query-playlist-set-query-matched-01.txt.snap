---
source: vlc-http/tests/test_cases.rs
expression: output
input_file: vlc-http/tests/inputs/query-playlist-set-query-matched-01.txt
---
[
  Harness(Model(
    items: {
      0: "file:///existing1",
      1: "file:///existing2",
    },
  )),
  LogEntry(Endpoint(
    path_and_query: "/requests/status.json?command=pl_play&id=1",
  ), Model(
    items: {
      0: "file:///existing1",
      1: "file:///existing2",
    },
    current_item_id: Some((1, Playing)),
  )),
  LogEntry(Endpoint(
    path_and_query: "/requests/status.json",
  ), Model(
    items: {
      0: "file:///existing1",
      1: "file:///existing2",
    },
    current_item_id: Some((1, Playing)),
  )),
  LogEntry(Endpoint(
    path_and_query: "/requests/playlist.json",
  ), Model(
    items: {
      0: "file:///existing1",
      1: "file:///existing2",
    },
    current_item_id: Some((1, Playing)),
  )),
  LogEntry(Endpoint(
    path_and_query: "/requests/playlist.json?command=in_enqueue&input=file:///new1",
  ), Model(
    items: {
      0: "file:///existing1",
      1: "file:///existing2",
      2: "file:///new1",
    },
    current_item_id: Some((1, Playing)),
  )),
  LogEntry(Endpoint(
    path_and_query: "/requests/playlist.json?command=in_enqueue&input=file:///new2",
  ), Model(
    items: {
      0: "file:///existing1",
      1: "file:///existing2",
      2: "file:///new1",
      3: "file:///new2",
    },
    current_item_id: Some((1, Playing)),
  )),
  LogEntry(Endpoint(
    path_and_query: "/requests/playlist.json?command=in_enqueue&input=file:///new3",
  ), Model(
    items: {
      0: "file:///existing1",
      1: "file:///existing2",
      2: "file:///new1",
      3: "file:///new2",
      4: "file:///new3",
    },
    current_item_id: Some((1, Playing)),
  )),
  Output([
    {
      "duration_secs": 214,
      "id": 2,
      "name": "Item 2",
      "url": "file:///new1",
    },
    {
      "duration_secs": 300,
      "id": 3,
      "name": "Item 3",
      "url": "file:///new2",
    },
    {
      "duration_secs": 407,
      "id": 4,
      "name": "Item 4",
      "url": "file:///new3",
    },
  ]),
  LogEntry(Endpoint(
    path_and_query: "/requests/status.json?command=pl_play&id=2",
  ), Model(
    items: {
      0: "file:///existing1",
      1: "file:///existing2",
      2: "file:///new1",
      3: "file:///new2",
      4: "file:///new3",
    },
    current_item_id: Some((2, Playing)),
  )),
  LogEntry(Endpoint(
    path_and_query: "/requests/status.json",
  ), Model(
    items: {
      0: "file:///existing1",
      1: "file:///existing2",
      2: "file:///new1",
      3: "file:///new2",
      4: "file:///new3",
    },
    current_item_id: Some((2, Playing)),
  )),
  LogEntry(Endpoint(
    path_and_query: "/requests/playlist.json",
  ), Model(
    items: {
      0: "file:///existing1",
      1: "file:///existing2",
      2: "file:///new1",
      3: "file:///new2",
      4: "file:///new3",
    },
    current_item_id: Some((2, Playing)),
  )),
  Output([
    {
      "duration_secs": 300,
      "id": 3,
      "name": "Item 3",
      "url": "file:///new2",
    },
    {
      "duration_secs": 407,
      "id": 4,
      "name": "Item 4",
      "url": "file:///new3",
    },
  ]),
  LogEntry(Endpoint(
    path_and_query: "/requests/status.json?command=pl_play&id=3",
  ), Model(
    items: {
      0: "file:///existing1",
      1: "file:///existing2",
      2: "file:///new1",
      3: "file:///new2",
      4: "file:///new3",
    },
    current_item_id: Some((3, Playing)),
  )),
  LogEntry(Endpoint(
    path_and_query: "/requests/status.json",
  ), Model(
    items: {
      0: "file:///existing1",
      1: "file:///existing2",
      2: "file:///new1",
      3: "file:///new2",
      4: "file:///new3",
    },
    current_item_id: Some((3, Playing)),
  )),
  LogEntry(Endpoint(
    path_and_query: "/requests/playlist.json",
  ), Model(
    items: {
      0: "file:///existing1",
      1: "file:///existing2",
      2: "file:///new1",
      3: "file:///new2",
      4: "file:///new3",
    },
    current_item_id: Some((3, Playing)),
  )),
  LogEntry(Endpoint(
    path_and_query: "/requests/playlist.json?command=pl_delete&id=0",
  ), Model(
    items: {
      1: "file:///existing2",
      2: "file:///new1",
      3: "file:///new2",
      4: "file:///new3",
    },
    current_item_id: Some((3, Playing)),
  )),
  Output([
    {
      "duration_secs": 407,
      "id": 4,
      "name": "Item 4",
      "url": "file:///new3",
    },
  ]),
  LogEntry(Endpoint(
    path_and_query: "/requests/status.json?command=pl_play&id=4",
  ), Model(
    items: {
      1: "file:///existing2",
      2: "file:///new1",
      3: "file:///new2",
      4: "file:///new3",
    },
    current_item_id: Some((4, Playing)),
  )),
  LogEntry(Endpoint(
    path_and_query: "/requests/status.json",
  ), Model(
    items: {
      1: "file:///existing2",
      2: "file:///new1",
      3: "file:///new2",
      4: "file:///new3",
    },
    current_item_id: Some((4, Playing)),
  )),
  LogEntry(Endpoint(
    path_and_query: "/requests/playlist.json",
  ), Model(
    items: {
      1: "file:///existing2",
      2: "file:///new1",
      3: "file:///new2",
      4: "file:///new3",
    },
    current_item_id: Some((4, Playing)),
  )),
  LogEntry(Endpoint(
    path_and_query: "/requests/playlist.json?command=pl_delete&id=1",
  ), Model(
    items: {
      2: "file:///new1",
      3: "file:///new2",
      4: "file:///new3",
    },
    current_item_id: Some((4, Playing)),
  )),
  Output([]),
]
